<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="FormBasdProvisioning" type="Workflow">
  <Description>A rule used by a Workflow to determine a step action or variable value.

Note that an Attributes map of all variables from the current WorkflowContext, merged with the arguments from the Step, is also passed into the workflow rule.</Description>
  <Signature returnType="Object">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="wfcontext">
        <Description>
          The current WorkflowContext.
        </Description>
      </Argument>
      <Argument name="handler">
        <Description>
          The workflow handler associated with the current WorkflowContext.
        </Description>
      </Argument>
      <Argument name="workflow">
        <Description>
          The current Workflow definition.
        </Description>
      </Argument>
      <Argument name="step">
        <Description>
          The current Step.
        </Description>
      </Argument>
      <Argument name="approval">
        <Description>
          The current Approval.
        </Description>
      </Argument>
      <Argument name="item">
        <Description>
          The WorkItem being processed.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="Object">
        <Description>
          The result of the workflow rule; dependent on the rule itself.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source><![CDATA[import org.apache.log4j.Logger;
import java.util.List;
import java.util.ArrayList;
import sailpoint.object.*;
import sailpoint.object.ProvisioningPlan.*;
import sailpoint.object.ProvisioningPlan.AccountRequest;
import sailpoint.object.ProvisioningPlan.AttributeRequest;
import sailpoint.api.Provisioner;
  

//Logger logger = Logger.getLogger("DExpertslog");


Identity ident = context.getObjectByName(Identity.class,userName);

String username = identity.getName();
//String username = "dinesh.khanal";
//logger.info("Test rule.....");
 // logger.info("username "+username);
//  logger.info("ident "+ident);
// Creating the New ProvisioningPlan
  ProvisioningPlan plan = new ProvisioningPlan();

//plan
plan.setIdentity(ident);
 // logger.info("plan "+plan);
//Provisining Plan Account Request
AccountRequest  accountRequest = new AccountRequest();
 //  logger.info("AcountReq test 0 ");
System.out.println("AcountReq test 0");
String dn="CN="+username+",OU=TEXAS,OU=Dexpert,DC=ittaster,DC=local";
//String dn=cn + ",OU=USA,DC=messi,DC=local";
  //   logger.info("dn "+dn);

accountRequest.setApplication("Dexpert AD Group 13 latest");
  accountRequest.setNativeIdentity(dn);
  
System.out.println("AcountReq test 1");

//AD application Name for Requested Ac






  //logger.info("aplication set");


  // Create Operation
//accountRequest.setOperation("sAMAccountName",ProvisioningPlan.AccountRequest.Operation.Set,username);
accountRequest.add(new AttributeRequest("samAccountName",ProvisioningPlan.Operation.Set,username));
  accountRequest.add(new AttributeRequest("password",ProvisioningPlan.Operation.Set,"nepal123!"));
System.out.println("AcountReq test 2");
  
  
//Add plan in accountRequest
 
plan.add(accountRequest);

 

// Adding default membership you can attribute request

AttributeRequest attributeRequest = new AttributeRequest();
System.out.println("AttributeReq test 3");


attributeRequest.setName("memberOf");
System.out.println("AttributeReq test 4");


attributeRequest.setOperation(ProvisioningPlan.Operation.Add);
System.out.println("AttributeReq test 5");
String ManagedAttributesIT= "CN="+attributeManaged+",OU=TEXAS,OU=Dexpert,DC=ittaster,DC=local";
attributeRequest.setValue(ManagedAttributesIT);
System.out.println("AttributeReq test 6");
List list =new ArrayList();
System.out.println("List test 7");
accountRequest.add(attributeRequest);
System.out.println("AcountReq test 8");
list.add(accountRequest);
System.out.println("List test 9");
plan.setAccountRequests(list);
System.out.println("AcountReq test 10");
System.out.println("Plan"+plan.toXml());
//return plan;

Provisioner provisioiner = new Provisioner(context);
provisioiner.execute(plan);

return plan.toXml();]]></Source>
</Rule>