<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Dexpert Dorna DN Gen" type="FieldValue">
  <Description>This rule can be used to generate a field value (eg - an account name) using data from the given Identity. If this rule is run in the context of a workflow step then the arguments passed into the step will also be available. Also, any field values that have been processed so far from the policy related to the Application/Role will be available.</Description>
  <Signature returnType="String"/>
  <Source><![CDATA[import sailpoint.object.*;
import java.util.regex;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
  import java.util.*;
//Identity identity = context.getObjectByName(Identity.class,"dorna.mainali");

String fname=identity.getFirstname();
  //System.out.println("1");
String lname=identity.getLastname();

  QueryOptions qo = new QueryOptions(); 
  qo.addFilter(Filter.eq("links.application.name","Dexpert_Application_AD_Provisioning")); //Dexpert_Application_AD_Provisioning
  List identitynames = new ArrayList();
  List sAMAccountNameList = new ArrayList();
  Iterator itr=context.search(Identity.class,qo); 
  //System.out.println("2");
  
  
  
  while(itr.hasNext()) 
  { 
    if (itr.hasNext()!=null){
    Identity id = (Identity)itr.next(); 
    //if(id.getLinks().size()==1) 
      //System.out.println("id : " + id); 
    //identitynames.add(id.getName());
    //String userName=id.getName();
    //System.out.println(userName); 
    
    //Identity ident = context.getObjectByName(Identity.class,userName);
    String sAMAccountName=id.getStringAttribute("dnName");//sAMAccountName "dnName" value="CN=Bijaya Karki,OU=TEXAS,OU=Dexpert,DC=ittaster,DC=local"/>
    //String sAMAccountName=id.getDisplayName();
    String stringPattern="=.*?,";
    Pattern p = Pattern.compile(stringPattern);   // the pattern to search for
	  Matcher m = p.matcher(sAMAccountName); 
    if (m.find()) {
	    sAMAccountName=sAMAccountName.substring(m.start()+1,m.end()-1);
    }
      
    //System.out.println(sAMAccountName);
    sAMAccountNameList.add(sAMAccountName);
  //System.out.println("2.0");  
  } 
  }
//System.out.println("2.1");
String dnName=fname.toLowerCase()+"_"+lname.toLowerCase();	
  //System.out.println("2.2");
int dnlength=dnName.length();
int count=0;
  //System.out.println("3");
for (String me : sAMAccountNameList) {
	 
	  
	  String  dncheckName=me;
  //System.out.println("4"+dncheckName);
	  if ( dncheckName.length() @gteq dnlength) {
		  String  dncheckName1=dncheckName.substring(0, dnlength);
		  if(dncheckName1.equals(dnName)) {
			  count=count+1;
			  //System.out.println(Integer.toString(count));
			  
		  }
		  
			}
	  
	  
	  }
if (count>0) {
	  dnName=dnName+Integer.toString(count);
}
  //System.out.println("4");
  String finaldnName="CN="+dnName+",OU=TEXAS,OU=Dexpert,DC=ittaster,DC=local";
	return finaldnName;
  ]]></Source>
</Rule>